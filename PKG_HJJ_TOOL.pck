CREATE OR REPLACE PACKAGE PKG_HJJ_TOOL IS
  /*
  功能描述：TOOL包
  创建日期：2020-01-14 创建人：HJJ
   */
   
   --cols表的默认值是Long类型需要转成varchar2
   FUNCTION HJJ_LONG_TO_CHAR(UTABLE IN VARCHAR2,C_NAME IN VARCHAR2)
   RETURN VARCHAR2;
  
   --检查工具表是否有创建
   PROCEDURE HJJ_CHECK_TABLE ;
  
   --导出表结构
   PROCEDURE HJJ_CRE_TABLE(UTABLE IN VARCHAR2);
   
   --生成备份表结构导出
   PROCEDURE HJJ_CRE_TABLE_CPY(UTABLE IN VARCHAR2);
   
   --生成归档表结构导出
   PROCEDURE HJJ_CRE_TABLE_HIS(UTABLE IN VARCHAR2);
   
   --导出主键
   PROCEDURE HJJ_CRE_PRIMARY(UTABLE IN VARCHAR2);
   
   --生成杀死session进程语句 S_USER= XEDM_TRD  S_NAME=可为空(HEJIAJIA)
   PROCEDURE HJJ_KILL_SESSION(S_USER IN VARCHAR2,S_NAME IN VARCHAR2);
   
   --导出加列的脚本 需要往hjj_add_table 插入列信息
   PROCEDURE HJJ_ADD_TABLE_COL(UTABLE IN VARCHAR2);
   
   --导加列的脚本     HJJ_ADD_COL('表名','列名，列名，列名')
   PROCEDURE HJJ_ADD_COLS(UTABLE IN VARCHAR2,COLS IN VARCHAR2);
   
   --给空表insert测试数据 ‘1’ 需要往hjj_test5 插入表名
   PROCEDURE HJJ_INSERT_TABLE_DATA;
   
   --建多表的
   PROCEDURE HJJ_INSERT_DATA(UTABLE IN VARCHAR2);
   
  END;
/
CREATE OR REPLACE PACKAGE BODY "PKG_HJJ_TOOL" IS

       FUNCTION HJJ_LONG_TO_CHAR(UTABLE IN VARCHAR2,C_NAME IN VARCHAR2)
       RETURN VARCHAR2
       AS
       DEFT VARCHAR2(4000);
       BEGIN 
       SELECT C.DATA_DEFAULT INTO DEFT FROM COLS C
       WHERE C.TABLE_NAME=UTABLE
       AND C.COLUMN_NAME=C_NAME;
       DEFT:=REPLACE(DEFT,CHR(10),'');
       RETURN DEFT;
       END;
       
       PROCEDURE HJJ_CHECK_TABLE 
       AS
       KK VARCHAR2(2);
       KK1 VARCHAR2(2);
       BEGIN
       SELECT COUNT(1) INTO KK FROM USER_TAB_COLS U WHERE U.TABLE_NAME IN ('HJJ_ADD_COL');
       IF KK=0 THEN 
       EXECUTE IMMEDIATE '
       CREATE TABLE HJJ_ADD_COL(
        C_NAME                        VARCHAR2(4000),
        C_TYPE                        VARCHAR2(4000),
        C_ZHUSHI                      VARCHAR2(4000),
        C_ISNULL                      VARCHAR2(1) DEFAULT ''Y'',
        C_DEFAUNT                     VARCHAR2(1000)
        ) ';
        EXECUTE IMMEDIATE 'COMMENT ON TABLE HJJ_ADD_COL IS ''何嘉佳的tool加列辅助表''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN HJJ_ADD_COL.C_NAME IS ''字段名''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN HJJ_ADD_COL.C_TYPE IS ''字段类型''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN HJJ_ADD_COL.C_ZHUSHI IS ''注释''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN HJJ_ADD_COL.C_ISNULL IS ''是否为空''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN HJJ_ADD_COL.C_DEFAUNT IS ''默认值''';
        END IF;
        
        SELECT COUNT(1) INTO KK FROM USER_TAB_COLS U WHERE U.TABLE_NAME IN ('HJJ_TEST5');
        IF KK1=0 THEN 
        EXECUTE IMMEDIATE 'CREATE TABLE HJJ_TEST5(
        TABLE_N        VARCHAR2(24)
        )';
        END IF;
       END;
       
       PROCEDURE HJJ_CRE_TABLE(UTABLE IN VARCHAR2)
       AS
        B VARCHAR2(4000);
        K VARCHAR2(4000);
        BB VARCHAR2(4000);
        V VARCHAR2(4000);
        VV VARCHAR2(4000);
        VV1 VARCHAR2(4000);
        E VARCHAR2(4000);
        MAX_B VARCHAR2(4000);
        INDE VARCHAR2(4000);
        IND VARCHAR2(4000);
        USERTABE VARCHAR2(4000);
        USERTABE1 VARCHAR2(4000);
         BEGIN
        USERTABE:=UPPER(TRIM(UTABLE));
        USERTABE1:=USERTABE;
        --获取最后一列 生成时判断加不加逗号
        SELECT MAX(C.COLUMN_ID) INTO MAX_B FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ;
        --开始写头部
        DBMS_OUTPUT.PUT_LINE('DECLARE');
        DBMS_OUTPUT.PUT_LINE('V_COUNT INTEGER;');
        DBMS_OUTPUT.PUT_LINE('BEGIN');
        DBMS_OUTPUT.PUT_LINE('SELECT COUNT(1) INTO V_COUNT ');
        DBMS_OUTPUT.PUT_LINE('FROM USER_TABLES ');
        DBMS_OUTPUT.PUT_LINE('WHERE TABLE_NAME='''||USERTABE1||''';');
        DBMS_OUTPUT.PUT_LINE('IF V_COUNT  =1 THEN ');
        DBMS_OUTPUT.PUT_LINE(' EXECUTE IMMEDIATE ''DROP TABLE '||USERTABE1||''';');
        DBMS_OUTPUT.PUT_LINE('END IF;');
        --生成建表语句
        DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE  ''CREATE TABLE '||USERTABE1 ||'(');
        FOR I IN (SELECT * FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ORDER BY C.COLUMN_ID)
        LOOP
        SELECT RPAD(DECODE(C.COLUMN_NAME,'BY','"BY"',C.COLUMN_NAME),30,' ')||
        CASE WHEN C.DATA_TYPE LIKE 'TIMESTAMP%' 
        THEN C.DATA_TYPE WHEN C.DATA_TYPE='CLOB' THEN C.DATA_TYPE
        WHEN C.DATA_TYPE='NUMBER' AND C.DATA_PRECISION IS NULL THEN C.DATA_TYPE 
        WHEN C.DATA_TYPE='NUMBER' AND C.DATA_SCALE=0 THEN  C.DATA_TYPE||'('||C.DATA_PRECISION||')'
        WHEN C.DATA_TYPE='NUMBER'
        THEN C.DATA_TYPE||'('||C.DATA_PRECISION||','||C.DATA_SCALE||')'
        ELSE C.DATA_TYPE||'('||C.DATA_LENGTH||')' END  INTO B
        FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
        --是否有默认值
        SELECT C.DATA_DEFAULT INTO K
        FROM USER_TAB_COLUMNS C WHERE  C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
        --是否为空
        SELECT CASE WHEN C.NULLABLE='N' THEN ' NOT NULL' ELSE NULL END INTO E FROM USER_TAB_COLUMNS C WHERE  C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
        E:=TRIM(E);
        E:=REPLACE(E,CHR(10),'');
        K:=TRIM(K);
        K:=REPLACE(K,CHR(10),'');
        IF E IS NOT NULL
        THEN E:=' '||E;
        END IF;
        IF K IS NOT NULL
        THEN
        IF I.COLUMN_ID=MAX_B
        THEN
        DBMS_OUTPUT.PUT_LINE(B||' DEFAULT '||REPLACE(K,'''','''''')||E);
        ELSE
        DBMS_OUTPUT.PUT_LINE(B||' DEFAULT '||REPLACE(K,'''','''''')||E||',');
        END IF;
        ELSE
        IF I.COLUMN_ID=MAX_B
        THEN
        DBMS_OUTPUT.PUT_LINE(B||E);
        ELSE
        DBMS_OUTPUT.PUT_LINE(B||E||',');
        END IF;
        END IF;
        END LOOP;
        DBMS_OUTPUT.PUT_LINE(')'';');
        --生成表注释
        SELECT 'EXECUTE IMMEDIATE ''COMMENT ON TABLE '||USERTABE1||' IS '''''||T.COMMENTS||''''''';' INTO V FROM  USER_TAB_COMMENTS T WHERE T.TABLE_NAME=USERTABE;
        DBMS_OUTPUT.PUT_LINE(V);
        --生成列注释
        FOR I IN (SELECT * FROM USER_COL_COMMENTS C WHERE C.TABLE_NAME=USERTABE AND C.COMMENTS IS NOT NULL )
        LOOP
        SELECT 'EXECUTE IMMEDIATE ''COMMENT ON COLUMN '||USERTABE1||'.'||DECODE(T.COLUMN_NAME,'BY','"BY"',T.COLUMN_NAME)||' IS '''''||T.COMMENTS||''''''';' INTO BB
        FROM USER_COL_COMMENTS T
        WHERE T.COLUMN_NAME=I.COLUMN_NAME AND T.TABLE_NAME=USERTABE;
        DBMS_OUTPUT.PUT_LINE(BB);
        END LOOP;
        --生成主键
        SELECT COUNT(1) INTO VV1 
        FROM USER_CONSTRAINTS T 
        LEFT JOIN USER_CONS_COLUMNS A 
        ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
        WHERE T.TABLE_NAME=USERTABE
        AND T.CONSTRAINT_TYPE='P';
        IF VV1 =1
        THEN
        SELECT 'EXECUTE IMMEDIATE  ''ALTER TABLE '||USERTABE1||' ADD CONSTRAINT '||'PK_'||USERTABE1||' PRIMARY KEY ('||WM_CONCAT(A.COLUMN_NAME)||')'';' INTO VV 
        FROM USER_CONSTRAINTS T 
        LEFT JOIN USER_CONS_COLUMNS A 
        ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
        WHERE T.TABLE_NAME=USERTABE
        AND T.CONSTRAINT_TYPE='P'
        ORDER BY A.POSITION;
        DBMS_OUTPUT.PUT_LINE(VV);
        END IF;
        --生成索引
        FOR I IN (SELECT DISTINCT ROWNUM, T.INDEX_NAME FROM USER_INDEXES T WHERE T.TABLE_NAME=USERTABE AND T.INDEX_TYPE ='NORMAL' AND T.UNIQUENESS<>'UNIQUE')
        LOOP
        IND:='IDX_'||USERTABE1||I.ROWNUM;
        SELECT WM_CONCAT(A.COLUMN_NAME) INTO INDE FROM USER_IND_COLUMNS A WHERE A.INDEX_NAME=I.INDEX_NAME ORDER BY A.COLUMN_POSITION;
        DBMS_OUTPUT.PUT_LINE( 'EXECUTE IMMEDIATE ''CREATE INDEX '||IND||' ON '||USERTABE1||' ('||INDE||')'';');
        END LOOP;
        DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO DEVSUP01'';');
        DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO ITOPR'';');
        DBMS_OUTPUT.PUT_LINE('END;');
        END HJJ_CRE_TABLE;


        PROCEDURE HJJ_CRE_TABLE_CPY(UTABLE IN VARCHAR2)
          AS
            B VARCHAR2(4000);
            BB VARCHAR2(4000);
            V VARCHAR2(4000);
            MAX_B VARCHAR2(4000);
            USERTABE VARCHAR2(4000);
            USERTABE1 VARCHAR2(4000);
          BEGIN
              USERTABE:=UPPER(TRIM(UTABLE));
            --不管输入是不是CPY 我都生成CPY
            IF SUBSTR(USERTABE,LENGTH(USERTABE)-2,3) = 'CPY'
            THEN
            USERTABE1:=USERTABE;
            USERTABE:=SUBSTR(USERTABE,0,LENGTH(USERTABE)-4);
            ELSE
            USERTABE1:=USERTABE||'_CPY';
            END IF;
            --获取最后一列 生成时判断加不加逗号
            SELECT MAX(C.COLUMN_ID) INTO MAX_B FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ;
            --开始写头部
            DBMS_OUTPUT.PUT_LINE('DECLARE');
            DBMS_OUTPUT.PUT_LINE('V_COUNT INTEGER;');
            DBMS_OUTPUT.PUT_LINE('BEGIN');
            DBMS_OUTPUT.PUT_LINE('SELECT COUNT(1) INTO V_COUNT ');
            DBMS_OUTPUT.PUT_LINE('FROM USER_TABLES ');
            DBMS_OUTPUT.PUT_LINE('WHERE TABLE_NAME='''||USERTABE1||''';');
            DBMS_OUTPUT.PUT_LINE('IF V_COUNT  =1 THEN ');
            DBMS_OUTPUT.PUT_LINE(' EXECUTE IMMEDIATE ''DROP TABLE '||USERTABE1||''';');
            DBMS_OUTPUT.PUT_LINE('END IF;');
            --生成建表语句
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE  ''CREATE TABLE '||USERTABE1 ||'(');
            FOR I IN (SELECT * FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ORDER BY C.COLUMN_ID)
            LOOP
            SELECT RPAD(DECODE(C.COLUMN_NAME,'BY','"BY"',C.COLUMN_NAME),30,' ')||
            CASE WHEN C.DATA_TYPE LIKE 'TIMESTAMP%'
            THEN C.DATA_TYPE WHEN C.DATA_TYPE='CLOB' THEN C.DATA_TYPE
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_PRECISION IS NULL THEN C.DATA_TYPE
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_SCALE=0 THEN  C.DATA_TYPE||'('||C.DATA_PRECISION||')'
            WHEN C.DATA_TYPE='NUMBER'
            THEN C.DATA_TYPE||'('||C.DATA_PRECISION||','||C.DATA_SCALE||')'
            ELSE C.DATA_TYPE||'('||C.DATA_LENGTH||')' END  INTO B
            FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
            IF I.COLUMN_ID=MAX_B
            THEN
            DBMS_OUTPUT.PUT_LINE(B);
            ELSE
            DBMS_OUTPUT.PUT_LINE(B||',');
            END IF;
            END LOOP;
            DBMS_OUTPUT.PUT_LINE(')'';');
             --生成表注释
            SELECT 'EXECUTE IMMEDIATE ''COMMENT ON TABLE '||USERTABE1||' IS '''''||T.COMMENTS||'-备份表'''''';' INTO V FROM  USER_TAB_COMMENTS T WHERE T.TABLE_NAME=USERTABE;
            DBMS_OUTPUT.PUT_LINE(V);
            --生成列注释
            FOR I IN (SELECT * FROM USER_COL_COMMENTS C WHERE C.TABLE_NAME=USERTABE AND C.COMMENTS IS NOT NULL )
            LOOP
            SELECT 'EXECUTE IMMEDIATE ''COMMENT ON COLUMN '||USERTABE1||'.'||DECODE(T.COLUMN_NAME,'BY','"BY"',T.COLUMN_NAME)||' IS '''''||T.COMMENTS||''''''';' INTO BB
            FROM USER_COL_COMMENTS T
            WHERE T.COLUMN_NAME=I.COLUMN_NAME AND T.TABLE_NAME=USERTABE;
            DBMS_OUTPUT.PUT_LINE(BB);
            END LOOP;

            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO DEVSUP01'';');
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO ITOPR'';');
            DBMS_OUTPUT.PUT_LINE('END;');
          END HJJ_CRE_TABLE_CPY;


          PROCEDURE HJJ_CRE_TABLE_HIS(UTABLE IN VARCHAR2)
            AS
            B VARCHAR2(4000);
            K VARCHAR2(4000);
            BB VARCHAR2(4000);
            V VARCHAR2(4000);
            VV VARCHAR2(4000);
            VV1 VARCHAR2(4000);
            E VARCHAR2(4000);
            MAX_B VARCHAR2(4000);
            INDE VARCHAR2(4000);
            IND VARCHAR2(4000);
            USERTABE VARCHAR2(4000);
            USERTABE1 VARCHAR2(4000);
            BEGIN
             USERTABE:=UPPER(TRIM(UTABLE));
            --不管输入是不是HIS 我都生成HIS
            IF SUBSTR(USERTABE,LENGTH(USERTABE)-2,3) = 'HIS'
            THEN
            USERTABE1:=USERTABE;
            USERTABE:=SUBSTR(USERTABE,0,LENGTH(USERTABE)-4);
            ELSE
            USERTABE1:=USERTABE||'_HIS';
            END IF;
            --获取最后一列 生成时判断加不加逗号
            SELECT MAX(C.COLUMN_ID) INTO MAX_B FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ;
            --开始写头部
            DBMS_OUTPUT.PUT_LINE('DECLARE');
            DBMS_OUTPUT.PUT_LINE('V_COUNT INTEGER;');
            DBMS_OUTPUT.PUT_LINE('BEGIN');
            DBMS_OUTPUT.PUT_LINE('SELECT COUNT(1) INTO V_COUNT ');
            DBMS_OUTPUT.PUT_LINE('FROM USER_TABLES ');
            DBMS_OUTPUT.PUT_LINE('WHERE TABLE_NAME='''||USERTABE1||''';');
            DBMS_OUTPUT.PUT_LINE('IF V_COUNT  =1 THEN ');
            DBMS_OUTPUT.PUT_LINE(' EXECUTE IMMEDIATE ''DROP TABLE '||USERTABE1||''';');
            DBMS_OUTPUT.PUT_LINE('END IF;');
            --生成建表语句
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE  ''CREATE TABLE '||USERTABE1 ||'(');
            FOR I IN (SELECT * FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=USERTABE ORDER BY C.COLUMN_ID)
            LOOP
            SELECT RPAD(DECODE(C.COLUMN_NAME,'BY','"BY"',C.COLUMN_NAME),30,' ')||
            CASE WHEN C.DATA_TYPE LIKE 'TIMESTAMP%'
            THEN C.DATA_TYPE WHEN C.DATA_TYPE='CLOB' THEN C.DATA_TYPE
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_PRECISION IS NULL THEN C.DATA_TYPE
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_SCALE=0 THEN  C.DATA_TYPE||'('||C.DATA_PRECISION||')'
            WHEN C.DATA_TYPE='NUMBER'
            THEN C.DATA_TYPE||'('||C.DATA_PRECISION||','||C.DATA_SCALE||')'
            ELSE C.DATA_TYPE||'('||C.DATA_LENGTH||')' END  INTO B
            FROM USER_TAB_COLUMNS C WHERE C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
            --是否有默认值
            SELECT C.DATA_DEFAULT INTO K
            FROM USER_TAB_COLUMNS C WHERE  C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
            --是否为空
            SELECT CASE WHEN C.NULLABLE='N' THEN ' NOT NULL' ELSE NULL END INTO E FROM USER_TAB_COLUMNS C WHERE  C.TABLE_NAME=I.TABLE_NAME AND C.COLUMN_ID=I.COLUMN_ID;
            E:=TRIM(E);
            E:=REPLACE(E,CHR(10),'');
            K:=TRIM(K);
            K:=REPLACE(K,CHR(10),'');
            IF E IS NOT NULL
            THEN E:=' '||E;
            END IF;
            IF K IS NOT NULL
            THEN
            IF I.COLUMN_ID=MAX_B
            THEN
            DBMS_OUTPUT.PUT_LINE(B||' DEFAULT '||REPLACE(K,'''','''''')||E);
            ELSE
            DBMS_OUTPUT.PUT_LINE(B||' DEFAULT '||REPLACE(K,'''','''''')||E||',');
            END IF;
            ELSE
            IF I.COLUMN_ID=MAX_B
            THEN
            DBMS_OUTPUT.PUT_LINE(B||E);
            ELSE
            DBMS_OUTPUT.PUT_LINE(B||E||',');
            END IF;
            END IF;
            END LOOP;
            DBMS_OUTPUT.PUT_LINE(')'';');
             SELECT 'EXECUTE IMMEDIATE ''COMMENT ON TABLE '||USERTABE1||' IS '''''||T.COMMENTS||'-历史表'''''';' INTO V FROM  USER_TAB_COMMENTS T WHERE T.TABLE_NAME=USERTABE;
             DBMS_OUTPUT.PUT_LINE(V);
            --生成列注释
            FOR I IN (SELECT * FROM USER_COL_COMMENTS C WHERE C.TABLE_NAME=USERTABE AND C.COMMENTS IS NOT NULL )
            LOOP
            SELECT 'EXECUTE IMMEDIATE ''COMMENT ON COLUMN '||USERTABE1||'.'||DECODE(T.COLUMN_NAME,'BY','"BY"',T.COLUMN_NAME)||' IS '''''||T.COMMENTS||''''''';' INTO BB
            FROM USER_COL_COMMENTS T
            WHERE T.COLUMN_NAME=I.COLUMN_NAME AND T.TABLE_NAME=USERTABE;
            DBMS_OUTPUT.PUT_LINE(BB);
            END LOOP;
            --生成主键
            SELECT COUNT(1) INTO VV1
            FROM USER_CONSTRAINTS T
            LEFT JOIN USER_CONS_COLUMNS A
            ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
            WHERE T.TABLE_NAME=USERTABE
            AND T.CONSTRAINT_TYPE='P';
            IF VV1 >=1
            THEN
            SELECT 'EXECUTE IMMEDIATE  ''ALTER TABLE '||USERTABE1||' ADD CONSTRAINT '||'PK_'||USERTABE1||' PRIMARY KEY ('||WM_CONCAT(A.COLUMN_NAME)||')'';' INTO VV
            FROM USER_CONSTRAINTS T
            LEFT JOIN USER_CONS_COLUMNS A
            ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
            WHERE T.TABLE_NAME=USERTABE
            AND T.CONSTRAINT_TYPE='P'
            ORDER BY A.POSITION;
            DBMS_OUTPUT.PUT_LINE(VV);
            END IF;
            --生成索引
            FOR I IN (SELECT DISTINCT ROWNUM, T.INDEX_NAME FROM USER_INDEXES T WHERE T.TABLE_NAME=USERTABE AND T.INDEX_TYPE ='NORMAL' AND T.UNIQUENESS<>'UNIQUE')
            LOOP
            IND:='IDX_'||USERTABE1||I.ROWNUM;
            SELECT WM_CONCAT(A.COLUMN_NAME) INTO INDE FROM USER_IND_COLUMNS A WHERE A.INDEX_NAME=I.INDEX_NAME ORDER BY A.COLUMN_POSITION;
            DBMS_OUTPUT.PUT_LINE( 'EXECUTE IMMEDIATE ''CREATE INDEX '||IND||' ON '||USERTABE1||' ('||INDE||')'';');
            END LOOP;
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO DEVSUP01'';');
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO ITOPR'';');
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''GRANT SELECT ON '||USERTABE1||' TO XEDM_TRD'';');
            DBMS_OUTPUT.PUT_LINE('END;');
          END HJJ_CRE_TABLE_HIS;

            
          
          
          PROCEDURE HJJ_CRE_PRIMARY(UTABLE IN VARCHAR2)
           AS
            USERTABE VARCHAR2(50);
            VV1      VARCHAR2(50);
            VV       VARCHAR2(4000);
           BEGIN 
           USERTABE:=UPPER(TRIM(UTABLE));
            --判断有无主键
            SELECT T.CONSTRAINT_NAME INTO VV1
            FROM USER_CONSTRAINTS T 
            LEFT JOIN USER_CONS_COLUMNS A 
            ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
            WHERE T.TABLE_NAME='TRBK_CLR_STO_DATA'
            AND T.CONSTRAINT_TYPE='P';
            IF VV1 IS NOT NULL
            THEN
            SELECT 'EXECUTE IMMEDIATE  ''ALTER TABLE '||USERTABE||' ADD CONSTRAINT '||'PK_'||USERTABE||' PRIMARY KEY ('||WM_CONCAT(A.COLUMN_NAME)||')'';' INTO VV 
            FROM USER_CONSTRAINTS T 
            LEFT JOIN USER_CONS_COLUMNS A 
            ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME
            WHERE T.TABLE_NAME=USERTABE
            AND T.CONSTRAINT_TYPE='P'
            ORDER BY A.POSITION;
            DBMS_OUTPUT.PUT_LINE('DECLARE'); 
            DBMS_OUTPUT.PUT_LINE('KK VARCHAR2(2000);');
            DBMS_OUTPUT.PUT_LINE('VV1 VARCHAR2(10);');
            DBMS_OUTPUT.PUT_LINE('BEGIN');
            DBMS_OUTPUT.PUT_LINE('SELECT COUNT(1) INTO VV1');
            DBMS_OUTPUT.PUT_LINE('FROM USER_CONSTRAINTS T');
            DBMS_OUTPUT.PUT_LINE('LEFT JOIN USER_CONS_COLUMNS A');
            DBMS_OUTPUT.PUT_LINE('ON T.CONSTRAINT_NAME=A.CONSTRAINT_NAME');
            DBMS_OUTPUT.PUT_LINE('WHERE T.TABLE_NAME='''||USERTABE||'''');
            DBMS_OUTPUT.PUT_LINE('AND T.CONSTRAINT_TYPE=''P'';');
            DBMS_OUTPUT.PUT_LINE('IF VV1 >=1');
            DBMS_OUTPUT.PUT_LINE('THEN EXECUTE IMMEDIATE ''ALTER TABLE '||USERTABE||' DROP CONSTRAINT '||VV1||''';');
            DBMS_OUTPUT.PUT_LINE('END IF;');
            DBMS_OUTPUT.PUT_LINE(VV);
            DBMS_OUTPUT.PUT_LINE('END;');
            END IF;
           END;
          
          
          

          
          
           PROCEDURE HJJ_KILL_SESSION(S_USER IN VARCHAR2,S_NAME IN VARCHAR2)
           AS
           V_CONFIG VARCHAR2(4000);
           BEGIN 
           V_CONFIG:=' AND OSUSER LIKE ''%'||UPPER(TRIM(S_NAME))||'%''';
           
           DBMS_OUTPUT.PUT_LINE('DECLARE');
           DBMS_OUTPUT.PUT_LINE('KK VARCHAR2(4000);');
           DBMS_OUTPUT.PUT_LINE('BEGIN');
           DBMS_OUTPUT.PUT_LINE('FOR I IN (SELECT * FROM V$SESSION WHERE STATUS=''INACTIVE'' AND USERNAME='''||UPPER(TRIM(S_USER))||''' AND PROGRAM=''PLSQLDEV.EXE'''||V_CONFIG||')');
           DBMS_OUTPUT.PUT_LINE('LOOP');
           DBMS_OUTPUT.PUT_LINE('SELECT ''ALTER SYSTEM KILL SESSION ''''''||SID||'',''||SERIAL#||'''''';'' INTO KK FROM V$SESSION T WHERE I.SADDR= T.SADDR;');
           DBMS_OUTPUT.PUT_LINE('DBMS_OUTPUT.PUT_LINE(KK);');
           DBMS_OUTPUT.PUT_LINE('END LOOP ;');
           DBMS_OUTPUT.PUT_LINE('END ;');
           END;
           
           
           
           PROCEDURE HJJ_ADD_TABLE_COL(UTABLE IN VARCHAR2)
           AS
           COUNT1 VARCHAR2(4);
           N_TABLE VARCHAR2(50);
           N_DEFAUT VARCHAR2(50);
           N_ISNULL VARCHAR2(50);
           BEGIN 
           PKG_HJJ_TOOL.HJJ_CHECK_TABLE;
           N_TABLE:=UPPER(TRIM(UTABLE));
           DBMS_OUTPUT.PUT_LINE('DECLARE');
            --开始遍历变量
            SELECT COUNT(1) INTO COUNT1 FROM HJJ_ADD_COL;
            FOR I IN 1..COUNT1 LOOP
            DBMS_OUTPUT.PUT_LINE('V_NUM'||I||'  NUMBER(10);');
            END LOOP;
            DBMS_OUTPUT.PUT_LINE('BEGIN');
            --写查询部分
            FOR I IN (SELECT ROWNUM,T.* FROM HJJ_ADD_COL T)
            LOOP 
            IF I.C_ISNULL ='N' THEN N_ISNULL:=' NOT NULL'; ELSE N_ISNULL:=NULL; END IF;
            IF I.C_DEFAUNT IS NOT NULL THEN N_DEFAUT:=' DEFAULT '||I.C_DEFAUNT; ELSE N_DEFAUT:=NULL; END IF;
            DBMS_OUTPUT.PUT_LINE('SELECT COUNT(1) INTO '||'V_NUM'||I.ROWNUM||' FROM COLS WHERE TABLE_NAME = UPPER('''||N_TABLE||''') AND COLUMN_NAME = UPPER('''||I.C_NAME||''');');
            DBMS_OUTPUT.PUT_LINE('IF '||'V_NUM'||I.ROWNUM||'=0 THEN ');
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''ALTER TABLE '||N_TABLE||' ADD ('||I.C_NAME||'    '||I.C_TYPE||N_DEFAUT||N_ISNULL||')'';');
            DBMS_OUTPUT.PUT_LINE('EXECUTE IMMEDIATE ''COMMENT ON COLUMN '||N_TABLE||'.'||I.C_NAME||' IS '''''||I.C_ZHUSHI||''''''';');
            DBMS_OUTPUT.PUT_LINE('END IF;');
            END LOOP;
            DBMS_OUTPUT.PUT_LINE('END;');
           END;
           
           PROCEDURE HJJ_ADD_COLS(UTABLE IN VARCHAR2,COLS IN VARCHAR2)
           AS
           V_UTABLE VARCHAR2(50);
           V_COLS VARCHAR2(4000);
           BEGIN 
           DELETE HJJ_ADD_COL;
           COMMIT;
           V_UTABLE:=UPPER(TRIM(UTABLE));
           V_COLS:=UPPER(TRIM(COLS));
           INSERT INTO HJJ_ADD_COL
           SELECT RES.C_NAME,
                  RES.C_TYPE,
                  RES.C_ZHUSHI,
                  RES.C_ISNULL,
                  RES.C_DEFAUNT
            FROM (SELECT REGEXP_SUBSTR(V_COLS,'[^,]+',1,ROWNUM) AS ID  FROM DUAL  
            CONNECT BY ROWNUM<=LENGTH(V_COLS)-LENGTH(REPLACE(V_COLS,','))+1) REC
            INNER JOIN (
            SELECT C.COLUMN_NAME AS C_NAME,
            CASE WHEN C.DATA_TYPE LIKE 'TIMESTAMP%' 
            THEN C.DATA_TYPE WHEN C.DATA_TYPE='CLOB' THEN C.DATA_TYPE
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_PRECISION IS NULL THEN C.DATA_TYPE 
            WHEN C.DATA_TYPE='NUMBER' AND C.DATA_SCALE=0 THEN  C.DATA_TYPE||'('||C.DATA_PRECISION||')'
            WHEN C.DATA_TYPE='NUMBER'
            THEN C.DATA_TYPE||'('||C.DATA_PRECISION||','||C.DATA_SCALE||')'
            ELSE C.DATA_TYPE||'('||C.DATA_LENGTH||')' END AS C_TYPE,
            COM.COMMENTS AS C_ZHUSHI,
            C.NULLABLE AS C_ISNULL,
            PKG_HJJ_TOOL.HJJ_LONG_TO_CHAR(C.TABLE_NAME,C.COLUMN_NAME) AS C_DEFAUNT 
            FROM USER_TAB_COLUMNS C 
            LEFT JOIN USER_COL_COMMENTS COM
            ON C.TABLE_NAME=COM.TABLE_NAME
            AND C.COLUMN_NAME=COM.COLUMN_NAME
            WHERE C.TABLE_NAME=V_UTABLE
            ) RES
            ON RES.C_NAME=REC.ID;
           COMMIT;
           
           PKG_HJJ_TOOL.HJJ_ADD_TABLE_COL(V_UTABLE);
           END;
           
           PROCEDURE HJJ_INSERT_TABLE_DATA
           AS
           KK VARCHAR2(4000);
           BEGIN 
           PKG_HJJ_TOOL.HJJ_CHECK_TABLE;
           FOR I IN (SELECT A.TABLE_N FROM HJJ_TEST5 A)
            LOOP
             SELECT 'INSERT INTO '||T.TABLE_NAME||'('||WM_CONCAT(T.COLUMN_NAME)||') VALUES('||WM_CONCAT('''1''')||');' INTO KK 
             FROM COLS T 
             WHERE T.NULLABLE ='N' 
             AND  I.TABLE_N=T.TABLE_NAME 
             GROUP BY T.TABLE_NAME;
            DBMS_OUTPUT.PUT_LINE(KK);
            END LOOP ;
           END;
           
           PROCEDURE HJJ_INSERT_DATA(UTABLE IN VARCHAR2)
           AS
           V_UTABLE VARCHAR2(4000);
           BEGIN
            DELETE HJJ_TEST5;
           COMMIT;
           V_UTABLE:=UPPER(TRIM(UTABLE));
           INSERT INTO HJJ_TEST5
           SELECT REGEXP_SUBSTR(V_UTABLE,'[^,]+',1,ROWNUM) AS TABLE_N 
           FROM DUAL
           CONNECT BY ROWNUM<=LENGTH(V_UTABLE)-LENGTH(REPLACE(V_UTABLE,',',''));
           COMMIT;
           HJJ_INSERT_TABLE_DATA;
           END;
      
END;
/
